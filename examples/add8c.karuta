// Example to use an external verilog module as the actual implementation of
// a method.
// This combines two instances of 8 bit + carry adder to make a 16 bit adder
// funcion.

@ext_combinational(resource="add8c", verilog="add8c.v", module="add8c", file="copy")
func add8c(x, y #8, c #1) (#1, #8) {
  // This implementation will be used only for simulation.
  var r #9
  r = x + y + c
  return r[8:8], r[7:0]
}

func add16(x, y #16) (#16) {
  var rl #8
  var cl #1
  (cl, rl) = add8c(x[7:0], y[7:0], 0)
  var rh #8
  var ch #1
  (ch, rh) = add8c(x[15:8], y[15:8], cl)
  return rh :: rl
}

func main() {
  var r16 #16
  r16 = add16(256, 128)
  print(r16)
}

main()

compile()
writeHdl("/tmp/a.iroha")
writeHdl("/tmp/a.v")
