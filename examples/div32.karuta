func div32impl(a, b int) (int) {
  var r int = 0
  var aa #64 = a
  var bb #64 = b
/*  var i int
  for (i = 31; i < 32; --i) {
    if (a >= (b << i)) {
      a -= (b << i)
      r += (1 << i)
    }
  }*/
  if (aa >= (bb << 31)) { aa -= (bb << 31); r += (1 << 31); }
  if (aa >= (bb << 30)) { aa -= (bb << 30); r += (1 << 30); }
  if (aa >= (bb << 29)) { aa -= (bb << 29); r += (1 << 29); }
  if (aa >= (bb << 28)) { aa -= (bb << 28); r += (1 << 28); }
  if (aa >= (bb << 27)) { aa -= (bb << 27); r += (1 << 27); }
  if (aa >= (bb << 26)) { aa -= (bb << 26); r += (1 << 26); }
  if (aa >= (bb << 25)) { aa -= (bb << 25); r += (1 << 25); }
  if (aa >= (bb << 24)) { aa -= (bb << 24); r += (1 << 24); }
  if (aa >= (bb << 23)) { aa -= (bb << 23); r += (1 << 23); }
  if (aa >= (bb << 22)) { aa -= (bb << 22); r += (1 << 22); }
  if (aa >= (bb << 21)) { aa -= (bb << 21); r += (1 << 21); }
  if (aa >= (bb << 20)) { aa -= (bb << 20); r += (1 << 20); }
  if (aa >= (bb << 19)) { aa -= (bb << 19); r += (1 << 19); }
  if (aa >= (bb << 18)) { aa -= (bb << 18); r += (1 << 18); }
  if (aa >= (bb << 17)) { aa -= (bb << 17); r += (1 << 17); }
  if (aa >= (bb << 16)) { aa -= (bb << 16); r += (1 << 16); }
  if (aa >= (bb << 15)) { aa -= (bb << 15); r += (1 << 15); }
  if (aa >= (bb << 14)) { aa -= (bb << 14); r += (1 << 14); }
  if (aa >= (bb << 13)) { aa -= (bb << 13); r += (1 << 13); }
  if (aa >= (bb << 12)) { aa -= (bb << 12); r += (1 << 12); }
  if (aa >= (bb << 11)) { aa -= (bb << 11); r += (1 << 11); }
  if (aa >= (bb << 10)) { aa -= (bb << 10); r += (1 << 10); }
  if (aa >= (bb << 9)) { aa -= (bb << 9); r += (1 << 9); }
  if (aa >= (bb << 8)) { aa -= (bb << 8); r += (1 << 8); }
  if (aa >= (bb << 7)) { aa -= (bb << 7); r += (1 << 7); }
  if (aa >= (bb << 6)) { aa -= (bb << 6); r += (1 << 6); }
  if (aa >= (bb << 5)) { aa -= (bb << 5); r += (1 << 5); }
  if (aa >= (bb << 4)) { aa -= (bb << 4); r += (1 << 4); }
  if (aa >= (bb << 3)) { aa -= (bb << 3); r += (1 << 3); }
  if (aa >= (bb << 2)) { aa -= (bb << 2); r += (1 << 2); }
  if (aa >= (bb << 1)) { aa -= (bb << 1); r += (1 << 1); }
  if (aa >= (bb << 0)) { aa -= (bb << 0); r += (1 << 0); }
  return r
}

@ext_entry
func div32(a, b int) (int) {
  return div32impl(a, b)
}

compile()
writeHdl("div.v")
